

services:


  nextjs-app:
    image: lalghisi/amservice:1.0
    volumes:
      - /opt/manutenzione/private-files/:/app/private-files/
      - /opt/manutenzione/:/app/source/
    ports:
      - "80:3000"
    env_file:
        - ./.env.local
    container_name: nextjs-app
    labels:
      - com.centurylinklabs.watchtower.enable=true
    restart: always

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: Gi9p3BVRmzMML0
      MYSQL_DATABASE: auth
    volumes:
      - /opt/manutenzione/my-sql/:/var/lib/mysql/
    restart: always

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 600 --label-enable
    restart: always

  cronjob:
    image: lalghisi/cron:1.0
    container_name: cronjob
    labels:
      - com.centurylinklabs.watchtower.enable=true
    restart: always

  portainer:
    image: portainer/portainer-ce
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    volumes:
      - /opt/manutenzione/postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    restart: always
